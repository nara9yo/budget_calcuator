name: Deploy to GitHub Pages

on:
  # • main 브랜치에 push될 때 실행
  push:
    branches: [ main ]
  # • 수동으로 실행 가능
  workflow_dispatch:

# • 동시 실행 방지
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # • 빌드 및 배포 작업
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # • 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4
        
      # • Node.js 설정 (18.x 버전 사용)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      # • 현재 디렉토리 구조 확인
      - name: Debug directory structure
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "App directory contents:"
          ls -la app/
          
      # • Node.js 및 npm 버전 확인
      - name: Check Node.js and npm versions
        run: |
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"
          
      # • 의존성 설치
      - name: Install dependencies
        run: |
          cd app
          echo "Installing dependencies in: $(pwd)"
          npm install --verbose
          echo "Dependencies installed successfully"
          echo "Package-lock.json exists: $(test -f package-lock.json && echo 'Yes' || echo 'No')"
          
      # • 프로젝트 빌드
      - name: Build project
        run: |
          cd app
          echo "Building project in: $(pwd)"
          npm run build
          echo "Build completed successfully"
          echo "Build output:"
          ls -la dist/
          
      # • GitHub Pages에 배포
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          # • 빌드된 파일이 있는 디렉토리
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./app/dist
          # • 커밋 메시지
          commit_message: ${{ github.event.head_commit.message }}
