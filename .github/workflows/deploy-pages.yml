name: Deploy to GitHub Pages (Official)

on:
  # • main 브랜치에 push될 때 실행
  push:
    branches: [ main ]
  # • 수동으로 실행 가능
  workflow_dispatch:

# • 워크플로우 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# • 동시 실행 방지
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # • 빌드 작업
  build:
    runs-on: ubuntu-latest
    
    steps:
      # • 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4
        
      # • Node.js 설정
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      # • 의존성 설치
      - name: Install dependencies
        run: |
          cd app
          npm install
          
      # • homepage 동적 업데이트
      - name: Update homepage dynamically
        run: |
          cd app
          # GitHub 사용자명 추출
          GITHUB_USERNAME="${{ github.repository_owner }}"
          # package.json의 homepage 업데이트
          sed -i "s|https://\[your-username\]\.github\.io/budget_calculator|https://$GITHUB_USERNAME.github.io/budget_calculator|g" package.json
          echo "Updated homepage to: https://$GITHUB_USERNAME.github.io/budget_calculator"
          
      # • 프로젝트 빌드
      - name: Build project
        run: |
          cd app
          npm run build
          
      # • 빌드 결과물 업로드
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./app/dist

  # • 배포 작업
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      # • GitHub Pages 배포
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
